[gd_scene load_steps=6 format=3 uid="uid://duc8wuc7nnljh"]

[ext_resource type="Script" uid="uid://boaufraey3ovc" path="res://scripts/GameCreator.gd" id="1_13amr"]

[sub_resource type="Shader" id="Shader_kxmqb"]
code = "shader_type canvas_item;
//I DONT OWN THIS i just took it directly from balatro source code
//and then converted it into godots shader language
//shoutouts localthunk, buy balatro now: https://www.playbalatro.com

uniform bool polar_coordinates = false;  // cool polar coordinates effect, this is use in card
uniform vec2 polar_center = vec2(0.5);
uniform float polar_zoom = 1.;
uniform float polar_repeat = 1.;

uniform highp float spin_rotation;
uniform highp float spin_speed = 1;
uniform highp vec2 offset = vec2(0., 0.);
uniform highp vec4 colour_1 : source_color;
uniform highp vec4 colour_2 : source_color;
uniform highp vec4 colour_3 : source_color;
uniform highp float contrast = 2.;
uniform highp float lighting = 0.4;
uniform highp float spin_amount = 0.36;
uniform highp float pixel_filter = 700.;
#define SPIN_EASE 1.0


vec4 effect(vec2 screenSize, vec2 screen_coords){
	//Convert to UV coords (0-1) and floor for pixel effect
	highp float pixel_size = length(screenSize.xy) / pixel_filter;
    highp vec2 uv = (floor(screen_coords.xy*(1./pixel_size))*pixel_size - 0.5*screenSize.xy)/length(screenSize.xy) - offset;
    highp float uv_len = length(uv);

	//Adding in a center swirl, changes with time. Only applies meaningfully if the 'spin amount' is a non-zero number
    highp float speed = (spin_rotation*SPIN_EASE*0.2) + 302.2;
    highp float new_pixel_angle = (atan(uv.y, uv.x)) + speed - SPIN_EASE*20.*(1.*spin_amount*uv_len + (1. - 1.*spin_amount));
    highp vec2 mid = (screenSize.xy/length(screenSize.xy))/2.;
    uv = (vec2((uv_len * cos(new_pixel_angle) + mid.x), (uv_len * sin(new_pixel_angle) + mid.y)) - mid);

	//Now add the paint effect to the swirled UV
    uv *= 30.;
    speed = TIME*(spin_speed);
	highp vec2 uv2 = vec2(uv.x+uv.y);

	for(int i=0; i < 5; i++) {
		uv2 += sin(max(uv.x, uv.y)) + uv;
		uv  += 0.5*vec2(cos(5.1123314 + 0.353*uv2.y + speed*0.131121),sin(uv2.x - 0.113*speed));
		uv  -= 1.0*cos(uv.x + uv.y) - 1.0*sin(uv.x*0.711 - uv.y);
	}

	//Make the paint amount range from 0 - 2
    highp float contrast_mod = (0.25*contrast + 0.5*spin_amount + 1.2);
	highp float paint_res = min(2., max(0.,length(uv)*(0.035)*contrast_mod));
    highp float c1p = max(0.,1. - contrast_mod*abs(1.-paint_res));
    highp float c2p = max(0.,1. - contrast_mod*abs(paint_res));
    highp float c3p = 1. - min(1., c1p + c2p);

	highp float ligth = (lighting - 0.2) * max(c1p*5. - 4., 0.) + lighting * max(c2p*5. - 4., 0.);
	highp vec4 ret_col = (0.3/contrast)*colour_1 + (1. - 0.3/contrast)*(colour_1*c1p + colour_2*c2p + vec4(c3p*colour_3.rgb, c3p*colour_1.a)) + ligth;
	return ret_col;
}

vec2 polar_coords(vec2 uv, vec2 center, float zoom, float repeat){
	vec2 dir = uv - center;
	float radius = length(dir) * 2.0;
	float angle = atan(dir.y , dir.x) * 1.0 / (PI * 2.0);
	return mod(vec2(radius * zoom, angle * repeat), 1.0);
}

void fragment() {
	vec2 polarCoords = UV;
	if (polar_coordinates){
		polarCoords = polar_coords(UV.xy, polar_center, polar_zoom, polar_repeat);
	}
	COLOR *= effect(TEXTURE_PIXEL_SIZE, polarCoords);
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8h8e4"]
shader = SubResource("Shader_kxmqb")
shader_parameter/polar_coordinates = false
shader_parameter/polar_center = Vector2(0.5, 0.5)
shader_parameter/polar_zoom = 1.0
shader_parameter/polar_repeat = 3.0
shader_parameter/spin_rotation = 2.0
shader_parameter/spin_speed = 7.0
shader_parameter/offset = Vector2(0, 0)
shader_parameter/colour_1 = Color(0.870588, 0.266667, 0.231373, 1)
shader_parameter/colour_2 = Color(0, 0.419608, 0.705882, 1)
shader_parameter/colour_3 = Color(0.0862745, 0.137255, 0.145098, 1)
shader_parameter/contrast = 3.5
shader_parameter/lighting = 0.3
shader_parameter/spin_amount = 0.2
shader_parameter/pixel_filter = 740.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_lcp4n"]
bg_color = Color(0.352941, 0.352941, 0.352941, 0.572549)

[sub_resource type="LabelSettings" id="LabelSettings_312jr"]
font_size = 48

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_13amr")

[node name="Control" type="Control" parent="."]
layout_mode = 3
anchors_preset = 0
offset_right = 40.0
offset_bottom = 40.0

[node name="background" type="ColorRect" parent="Control"]
modulate = Color(0.641934, 0.641934, 0.641934, 1)
material = SubResource("ShaderMaterial_8h8e4")
layout_mode = 1
anchors_preset = -1
anchor_right = 48.0
anchor_bottom = 27.0
grow_horizontal = 2
grow_vertical = 2
metadata/_edit_use_anchors_ = true

[node name="Panel" type="Panel" parent="."]
layout_mode = 0
offset_left = 626.0
offset_top = 71.0
offset_right = 1283.0
offset_bottom = 936.0
theme_override_styles/panel = SubResource("StyleBoxFlat_lcp4n")

[node name="Label" type="Label" parent="Panel"]
layout_mode = 0
offset_left = 112.0
offset_top = 35.0
offset_right = 546.0
offset_bottom = 102.0
text = "Добавление игры"
label_settings = SubResource("LabelSettings_312jr")

[node name="Name" type="LineEdit" parent="Panel"]
layout_mode = 0
offset_left = 167.0
offset_top = 144.0
offset_right = 507.0
offset_bottom = 210.0
theme_override_font_sizes/font_size = 32
placeholder_text = "Название игры..."
max_length = 50

[node name="Front" type="Button" parent="Panel"]
layout_mode = 0
offset_left = 167.0
offset_top = 254.0
offset_right = 507.0
offset_bottom = 320.0
theme_override_font_sizes/font_size = 32
text = "Передняя"

[node name="Back" type="Button" parent="Panel"]
layout_mode = 0
offset_left = 167.0
offset_top = 352.0
offset_right = 507.0
offset_bottom = 418.0
theme_override_font_sizes/font_size = 32
text = "Задняя"

[node name="Spine" type="Button" parent="Panel"]
layout_mode = 0
offset_left = 167.0
offset_top = 454.0
offset_right = 507.0
offset_bottom = 520.0
theme_override_font_sizes/font_size = 32
text = "Боковая"

[node name="Executable" type="Button" parent="Panel"]
layout_mode = 0
offset_left = 167.0
offset_top = 577.0
offset_right = 507.0
offset_bottom = 675.0
theme_override_font_sizes/font_size = 32
text = "Исполняемый
Файл"

[node name="Done" type="Button" parent="Panel"]
layout_mode = 0
offset_left = 167.0
offset_top = 743.0
offset_right = 507.0
offset_bottom = 809.0
theme_override_font_sizes/font_size = 32
text = "Готово"

[node name="InstructionLabel" type="Label" parent="."]
layout_mode = 1
anchors_preset = 2
anchor_top = 1.0
anchor_bottom = 1.0
offset_left = 19.0
offset_top = -50.0
offset_right = 550.0
offset_bottom = -16.0
grow_vertical = 0
theme_override_font_sizes/font_size = 24
text = "Нажмите Esc чтобы вернуться в глав. меню"
horizontal_alignment = 1

[connection signal="pressed" from="Panel/Front" to="." method="_on_front_pressed"]
[connection signal="pressed" from="Panel/Back" to="." method="_on_back_pressed"]
[connection signal="pressed" from="Panel/Spine" to="." method="_on_spine_pressed"]
[connection signal="pressed" from="Panel/Executable" to="." method="_on_executable_pressed"]
[connection signal="pressed" from="Panel/Done" to="." method="_on_done_pressed"]
